#!/bin/bash
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.

# You should have received a copy of the GNU General Public License
# along with Readline.  If not, see <http://www.gnu.org/licenses/>.

# X11 DISPLAY variable, needs to be set if run from cron
[ -z "$DISPLAY" ] && export DISPLAY=:0

# the path to wallpaper images
[ -z "$WALLPAPER_PATH" ] && WALLPAPER_PATH="$HOME/share/wallpaper"

# data file to identify groups of images
FILE_CATEGORY="$WALLPAPER_PATH/category"

# file to use when no .list is present
FILE_DEFAULT="$WALLPAPER_PATH/general/default.png"

# files used internally, should not be modified by hand
FILE_LIST="$WALLPAPER_PATH/.list"
FILE_INUSE="$WALLPAPER_PATH/.inuse"

# allow advanced globbing features, replaces the need for regex or scripting
shopt -s globstar
shopt -s extglob

# wallpaper command
set_wallpaper() {
        [ -n "$1" ] && feh --bg-scale "$file" &>/dev/null
}

## end config

parser() {
        local status=1

        [ $# -ge 2 ] && \
        while read line
        do
                # extglob can be used for escapes

                # any line starting with #
                line="${line###*}"
                # # valid comment
                #       # valid comment

                # any whitespace followed by #
                line="${line%%[ $'\t']#*}"
                # text # valid comment
                # text# invalid comment

                # blank line/removed comment
                [ -z "$line" ] && continue

                # first field is our category
                [ "${line%% *}" = "$1" ] && {
                        echo "${line#* }"
                        status=0
                }

                # allow it to keep going, instead of breaking lines just
                # use the same prefix
        done <"$2"

        return $status
}

get_path() {
        # to avoid infinite recursion of categories
        [ -f "$FILE_INUSE" ] \
                && grep -Fx -e "$1" "$FILE_INUSE" >/dev/null \
                && return
        echo "$1" >>"$FILE_INUSE"

        category="$(parser "$1" "$FILE_CATEGORY")"
        [ $? -eq 0 ] && \
        for cat in $category
        do
                get_path "$cat"
        done || {
                [ -f "$1" ] && echo "$1" || \
                [ -d "$1" ] && find "$1" -maxdepth 1 -type f -print || \
                warning "unknown category '$1'"
        }
}

error() {
        [ -n "$1" ] && printf "%s: error: %s\n" \
                        "$(basename -- "$0")" \
                        "$1" 1>&2
        exit 1
}

warning() {
        [ -n "$1" ] && printf "%s: warning: %s\n" \
                                "$(basename -- "$0")" \
                                "$1" 1>&2
}

usage() {
        cat 1>&2 <<USAGE
USAGE: $(basename -- "$0") [ARG] [CATEGORY] ...

ARG:
        -a, --add
                Add categories to wallpaper list.
        -o, --overwrite
                Replace categories in wallpaper list. [default]
        -l, --list
                print wallpaper list and exit

CATEGORY:
        A list of files, directories or category file entries.

ENVIRONMENT VARIABLES:
        WALLPAPER_PATH
                The path to wallpaper images.
NOTE:
        When invoked with no arguments, it will set a random wallpaper
        from the list.
USAGE
        exit 1
}

# TODO: replace with getopts (no long options)
[ $# -ge 1 ] && \
case "$1" in
(-\?|-h|--help)         usage;;
(-a|--add)              shift;;
(-l|--list)             cat "$FILE_LIST" 2>/dev/null; exit;;
(-!(o|-overwrite))      error "unknown option '$1'";;
(*)                     rm -f -- "$FILE_INUSE" "$FILE_LIST";;
esac

# use relative paths
pushd "$WALLPAPER_PATH" >/dev/null

# parse all command arguments, with word-splitting and globbing
[ $# -ge 1 ] && \
for c in $@
do
        get_path "$c" >>"$FILE_LIST"
done

file="$FILE_DEFAULT"
[ -f "$FILE_LIST" ] && file="$(shuf -n1 "$FILE_LIST")"

set_wallpaper "$file"

popd >/dev/null
